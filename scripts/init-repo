#!/bin/sh
#
# ==============================================================================
# file:         init-repo
# description:  Automatic repo configuration script to enhance/replace git init
# author:       Ben Manson
# date:         2022-10-16
# ==============================================================================


if ! [ -d "${PWD}/.git" ]; then
    read -p "This is not a git repo - would you like to make it one? [y/N] " result
    result=${result:-n}

    case $result in
        [Yy]* ) git init;;
        [Nn]* ) printf "\nExiting..." && exit;;
        * ) echo "Please answer yes or no.";;
    esac
fi
printf "\n\n"

echo "Downloading default .editorconfig file and placing in project root..."
CURL_COMMAND=\
'curl -SLo $PWD/.editorconfig "https://raw.githubusercontent.com/benmanson/benmanson/main/conf/common/.editorconfig"'

if [ -f "${PWD}/.editorconfig" ]; then
    read -p ".editorconfig already exists - overwrite? [y/N] " result
    result=${result:-n}

    case $result in
        [Yy]* ) printf "\n" && eval $CURL_COMMAND;;
        [Nn]* ) printf "\nSkipping...\n";;
        * ) echo "Please answer yes or no.";;
    esac
else
    eval $CURL_COMMAND
fi
printf "\n\n"

echo "Downloading default .gitignore file and placing in project root..."
CURL_COMMAND=\
'curl -SLo $PWD/.gitignore "https://raw.githubusercontent.com/benmanson/benmanson/main/.gitignore"'

if [ -f "${PWD}/.gitignore" ]; then
    read -p ".gitignore already exists - overwrite? [y/N] " result
    result=${result:-n}

    case $result in
        [Yy]* ) printf "\n" && eval $CURL_COMMAND;;
        [Nn]* ) printf "\nSkipping...\n";;
        * ) echo "Please answer yes or no.";;
    esac
else
    eval $CURL_COMMAND
fi
printf "\n\n"

# https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration/
echo "Line termination configuration settings..."
read -p "Are you on Windows? [y/N] " result
result=${result:-n}

case $result in
    [Yy]* )
        read -p "Is this a Windows only project? [y/N] " result
        result=${result:-n}

        case $result in
            [Yy]* ) printf "\nSet core.autocrlf to false\n" && git config core.autocrlf false;;
            [Nn]* ) printf "\nSet core.autocrlf to true\n" && git config core.autocrlf true;;
            * ) echo "Please answer yes or no.";;
        esac;;
    [Nn]* ) printf "\nSet core.autocrlf to input\n" && git config core.autocrlf input;;
    * ) echo "Please answer yes or no.";;
esac
printf "\n"